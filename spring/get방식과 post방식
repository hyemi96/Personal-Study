#get 방식

- 서버에 있는 정보를 가져오라고 성계된 방법, 하이퍼링크로 전송도 가능
- 최대 240byte까지 데이터 전송가능
- Query-spring 환경변수를 통해 서버로 전달
- url에 전송정보가 노출됨.


get : (ex. http://localhost:8080/insert.jsp?name=hyemi&address=song)
url 뒤에 파라미터 값을 적어주는 방식. 데이터가 외부에 노출되어 보안에 취약하다.
지정된 리소스에서 데이터를 요청하여 읽을 때 사용하는 리소스
클라이언트로부터 데이터를 이름 + 값이 결합된 스트림 형태로 전달함
각 이름과 값의 쌍은 &을 이용하여 구분한다.
웹브라우저의 주소 입력란에 직접 입력해도 데이터를 서버로 전송가능
데이터를 쿼리의 일부로 전달 기본적으로 DB에 대한 질의어 데이터와 같은 요청 자체를 위한 정보
데이터 용량이 클 시 데이터가 절단됨(초과된 용량의 데이터 만큼)
=> url로 전달되기 때문에 225자 이상은 절단
퍼머링크로 사용 가능
아무리 hidden 타입을써서 전송해도 get방식으로 보내면 url 에 전부 노출되어 버린다.
*퍼머링크 : 정보를 식별하는 고유 식별자, 고유 주소 체계
*이클립스에서 get방식 한글 인코딩이 깨질 시에는 톰캣 server.xml 에 63라인의
Connect 부분에 URLEncoding="UTF-8"을 추가해주면 된다.(톰캣 8.0부터는 자동지원)


#post 방식
- 서버로 정보를 보내려고 설계된 방식
- *(중요)폼 태그를 통한 전송만 가능
- 데이터 크기에 제한 없음
- 데이터 노출을 줄일 수 있다

post :( ex. http://localhost:8080/from.jsp)
클라이언트와 서버간 상호 정의도어 있는 형식대로 값을 인코딩한 뒤 다음 서버로 전송
내부의 구분자가 각 파라미터(이름 + 값)을 구분
벡엔드 프로그램에 사용
서버 : 전달된 스트링을 디코딩 > 각 파라미터 구분 > 필요한 값들을 추출
클라이언트로부터 데이터가 HTTP헤더에 포함되어 전송됨
브라우저의 주소 입력란에 내용이 나타나지 않음
특정 페이지로 많은 양의 파라미터를 전송하건 보안상 노출되어선 안되는 파라미터를 전송하는 경우
(일정한 크기 이상의 데이터 인코딩 가능)
get 방식에 비해 처리 속도가 다소 늦음
퍼머링크로 사용불가
charest 설정으로 데이터 인코딩 가능
보통 form을 이용하여 submit 하는 형태를 갖출 때 사용


get < post 인 이유
- get 방식은 데이터의 용량 제한이 있는 반면 post 방식은 용량제한이 없고, get방식은 예약어가 있기 때문에 불편하다.
또한, post방식은 사용자에게 값으 노출 시키지 않아도 되기 때문이다.


.exe => 프로그램

프로그램이 실행되어 돌아가고 있는 상태 = "프로세스" 

한 프로세스에서 동시에 진행되는 여러개의 갈래 : 스레드
